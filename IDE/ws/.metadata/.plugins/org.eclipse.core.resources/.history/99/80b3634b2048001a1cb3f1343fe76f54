package org.truffle.cs.mj.nodes;

package org.truffle.cs.mj.nodes;

import com.oracle.truffle.api.dsl.NodeChild;
import com.oracle.truffle.api.dsl.Specialization;

@NodeChild(value = "x", type = MJExpresionNode.class)
public abstract class MJUnaryNode extends MJExpresionNode {

    public static abstract class NotNode extends MJUnaryNode {
        @Specialization
        public int add(int x, int y) {
            return x + y;
        }

        @Specialization
        public int add(int x, float y) {
            return x + (int) y;
        }

        @Specialization
        public float add(float x, float y) {
            return x + y;
        }

        @Specialization
        public float add(float x, int y) {
            return x + y;
        }
    }

    public static abstract class NegNode extends MJUnaryNode {
        @Specialization
        public int sub(int x, int y) {
            return x - y;
        }

        @Specialization
        public int sub(int x, float y) {
            return x - (int) y;
        }

        @Specialization
        public float sub(float x, float y) {
            return x - y;
        }

        @Specialization
        public float sub(float x, int y) {
            return x - y;
        }
    }
}
